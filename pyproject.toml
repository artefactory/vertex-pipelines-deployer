[tool.poetry]
name = "vertex-deployer"
version = "0.3.2"
description = ""
authors = ["julesbertrand <julesbertrand13@gmail.com>"]
readme = "README.md"
packages = [{include = "deployer"}]

[tool.poetry.scripts]
vertex-deployer = "deployer.cli:app"

[tool.poetry.dependencies]
python = ">=3.8, <3.11.0"
kfp = "^2.0,>=2.0.1"
google-cloud-aiplatform = "^1.26"
requests = "^2.31"
typer = "^0.9"
rich = "^13.5"
loguru = "^0.7"
pydantic-settings = "^2.0"
pydantic = "^2.3"
pyinstrument = { version = "^4.5", optional = true }
toml = "^0.10"
tomlkit = "^0.12"

[tool.poetry.group.dev.dependencies]
black = "^23.7"
isort = "^5.12"
pytest = "^7.4"
pre-commit = "^3.3"
ipykernel = "^6.9"
nbstripout = "^0.6"
ruff = "^0.1"
pytest-cov = "^4.1"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5"
mkdocs-techdocs-core = "^1.2"

[tool.poetry.extras]
profiling = ["pyinstrument"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
python_version = "3.10"
line-length = 99

[tool.isort]
profile = "black"
known_first_party = ["vertex", "tests"]

[tool.ruff]
ignore = [
    "D100",
    "D205",
    "D415",
]
line-length = 99
select = [
    "B",    # bugbear
    "C4",   # comprehensions
    "C90",  # mccabe
    "D",    # docstrings
    "E",    # flake8
    "F",    # flake8
    "W",    # flake8
    "S",    # bandit
    "N",    # pep8-naming
    "RUF"   # ruff
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"*cli.py" = ["D", "B008"]
"*__init__.py" = [
    "F401",
    "D100",
    "D101",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
]
"tests/*" = ["D", "S101"]

[tool.semantic_release]
version_variables = ["deployer/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_message = "chore(release): {version}\n\n[skip ci]\nAutomatically generated by semantic-release"
tag_format = "{version}"

[tool.semantic_release.changelog]
exclude_commit_patterns = ['''^chore\(release\).*''']


[tool.vertex_deployer]
log_level = "DEBUG"

[tool.vertex_deployer.list]
with_configs = true
