# This workflow triggers the CI, updates the version, and uploads the release to GitHub and Google Cloud Storage when a push is made to either the 'main' or 'develop' branch.
#
# Workflow Steps:
#
# 1. Ci is triggered using the CI workflow defined in .github/workflows/ci.yaml
# 2. If it succeeds, the version is updated using Python Semantic Release
# 3. The release is uploaded to GitHub (same step and GitHub action)
# 5. Authentication to Google Cloud is achieved using Workload Identity Federation
# 6. The release is uploaded to Google Cloud Storage
#
# For more details on setting up Workload Identity Federation for GitHub, visit https://github.com/google-github-actions/auth#setting-up-workload-identity-federation

name: Deploy pipelines

on:
  push:
    branches:
      - docs/add-full-example-to-repo

env:
  PYTHON_VERSION: "3.10"
  VERTEX_DEPLOYER_VERSION: "0.2.0"
  PROJECT_ID: "vertex-deployer-sandbox-7444"
  GCP_REGION: "europe-west1"
  GAR_LOCATION: "europe-west1"
  GAR_PIPELINES_REPO_ID: "demo-pipelines"
  VERTEX_STAGING_BUCKET_NAME: "vertex-deployer-sandbox-7444-vertex-staging"
  VERTEX_SERVICE_ACCOUNT: "vertexai-pipelines@vertex-deployer-sandbox-7444.iam.gserviceaccount.com"

jobs:
  deploy-pipelines:
    name: Deploy pipelines
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get vertex-deployer from remote
      run: |
        gsutil cp gs://vertex-pipelines-deployer/vertex_deployer-${{ env.VERTEX_DEPLOYER_VERSION }}.tar.gz .

    - name: Install requirements
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install ./vertex_deployer-${{ env.VERTEX_DEPLOYER_VERSION }}.tar.gz

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

    - name: Check pipelines
      run: |
        cd example
        vertex-deployer -log DEBUG deploy dummy_pipeline \
          --compile \
          --upload \
          --run \
          --local-package-path . \
          --tags my-tag \
          --config-filepath vertex/configs/dummy_pipeline/config_test.json \
          --experiment-name my-experiment \
          --enable-caching
